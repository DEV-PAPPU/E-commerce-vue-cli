{"remainingRequest":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\src\\components\\frontend\\pages\\ecommerce\\includes\\checkout.vue?vue&type=template&id=248c1003&","dependencies":[{"path":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\src\\components\\frontend\\pages\\ecommerce\\includes\\checkout.vue","mtime":1635259470333},{"path":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ss computer\\Desktop\\vuejs\\ecommerce\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}